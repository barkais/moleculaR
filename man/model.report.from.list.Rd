% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_linear_models.R
\name{model.report.from.list}
\alias{model.report.from.list}
\title{Generate a Comprehensive Model Report with Visualizations from a Model List}
\usage{
model.report.from.list(
  dataset,
  model.list,
  out.col = "output",
  leave.out,
  what.model = 1,
  save.pred = T,
  plot_title = "Linear Regression Model Analysis"
)
}
\arguments{
\item{dataset}{Path to a CSV file containing the data. First column should contain row identifiers,
and the specified outcome column should contain the target variable.}

\item{model.list}{Path to a CSV file containing models generated by model.subset.parallel or similar
functions. The file should include a 'formula' column with model formulas.}

\item{out.col}{Name of the outcome/target column in the dataset (default: 'output').}

\item{leave.out}{Vector of row identifiers to exclude from model training. These samples
will be used for out-of-sample validation.}

\item{what.model}{Integer indicating which model from the model list to use (default: 1, the first model).}

\item{save.pred}{Logical indicating whether to save out-of-sample predictions to a CSV file (default: TRUE).}

\item{plot_title}{Title for the generated plot (default: "Linear Regression Model Analysis").}
}
\value{
A ggplot object visualizing the model performance, with both training and out-of-sample
        data points. The function also prints various statistics and tables to the console.
}
\description{
This function produces a detailed report for a linear model selected from a model list,
including cross-validation results, coefficient summaries, and visualizations. It handles
both training data evaluation and out-of-sample predictions, displaying results in both
tabular and graphical formats.
}
\details{
The function performs the following steps:
1. Reads and preprocesses the dataset, scaling predictors and separating leave-out samples
2. Extracts the specified model from the model list and evaluates it
3. Performs cross-validation with different fold configurations (3-fold, 5-fold, and LOO)
4. Creates a visualization of model performance showing predicted vs. measured values
5. Makes predictions for left-out samples and calculates error metrics
6. Generates both a standard scatter plot and a formatted validation table for out-of-sample results

Special features of the visualization include:
- Color-coding points by position (ortho, meta, para, etc.)
- Displaying 90% prediction intervals
- Automated labeling of outlier points
- Summary statistics annotations (R², Q² for different CV schemes)
}
